# This compose file will create 18 ubuntu containers with SSH enable from the ubuntu:latest image.
# It will organise them in a bridge network, with 3 datacenters : dc1 (10.33.1.0/24), dc2 (10.33.2.0/24) and dc3 (10.33.3.0/24)
# The network configuration for DCX will be as follows :
# - nomad/consul server 1            : 10.33.X.1
# - nomad/consul server 2            : 10.33.X.2
# - nomad/consul server 3            : 10.33.X.3
# - nomad/consul client 1            : 10.33.X.101
# - nomad/consul client 2            : 10.33.X.102
# - nomad/consul client 3            : 10.33.X.103
# - gateway for all the containers   : 10.33.X.254
# with X=1 for DC1 and X=2 for DC2 etc...
# DC3 is considered to be in a different "region" as DC1 & DC2. This will be relevant during Nomad setup.

# SSH-enabled container lets us set them up using Ansible without booting up a bunch of heavy VMs.

# DO NOT USE FOR PRODUCTION, TESTING PURPOSES ONLY
# there are major security concerns with this, one of them being that Docker in Docker (DinD), which is necessary to start our docker-driven nomad jobs inside this cluster, 
# can lead to processes leaking out of their container environment and into the host.

version: "3.9"
services:

    ###################################
    ############### DC1 ###############
    ###################################

  dc1_server_1:
    hostname: dc1_server_1
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.1.1
        aliases:
          - dc1_server_1

  dc1_server_2:
    hostname: dc1_server_2
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.1.2
        aliases:
          - dc1_server_2

  dc1_server_3:
    hostname: dc1_server_3
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.1.3
        aliases:
          - dc1_server_3

  dc1_client_1:
    hostname: dc1_client_1
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.1.101
        aliases:
          - dc1_client_1

  dc1_client_2:
    hostname: dc1_client_2
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.1.102
        aliases:
          - dc1_client_2

  dc1_client_3:
    hostname: dc1_client_3
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.1.103
        aliases:
          - dc1_client_3

    #########################################
    ################# DC2 ###################
    #########################################

  dc2_server_1:
    hostname: dc2_server_1
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.2.1
        aliases:
          - dc2_server_1

  dc2_server_2:
    hostname: dc2_server_2
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.2.2
        aliases:
          - dc2_server_2

  dc2_server_3:
    hostname: dc2_server_3
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.2.3
        aliases:
          - dc2_server_3

  dc2_client_1:
    hostname: dc2_client_1
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.2.101
        aliases:
          - dc2_client_1

  dc2_client_2:
    hostname: dc2_client_2
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.2.102
        aliases:
          - dc2_client_2

  dc2_client_3:
    hostname: dc2_client_3
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.2.103
        aliases:
          - dc2_client_3

    #########################################
    ################# DC3 ###################
    #########################################

  dc3_server_1:
    hostname: dc3_server_1
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.3.1
        aliases:
          - dc3_server_1

  dc3_server_2:
    hostname: dc3_server_2
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.3.2
        aliases:
          - dc3_server_2

  dc3_server_3:
    hostname: dc3_server_3
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.3.3
        aliases:
          - dc3_server_3

  dc3_client_1:
    hostname: dc3_client_1
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.3.101
        aliases:
          - dc3_client_1

  dc3_client_2:
    hostname: dc3_client_2
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.3.102
        aliases:
          - dc3_client_2

  dc3_client_3:
    hostname: dc3_client_3
    image: ubuntu-ssh
    build: 
      context: .
      dockerfile: ./ubuntu-ssh.dockerfile
    networks:
      consul:
        ipv4_address: 10.33.3.103
        aliases:
          - dc3_client_3



### Networks

networks:
  consul:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.33.0.0/16
          gateway: 10.33.0.254